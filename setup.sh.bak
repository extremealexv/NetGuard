#!/bin/bash

echo "üöÄ Starting Netureon setup..."

# Check Python installation
echo "üêç Checking Python installation..."
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 is not installed. Please install Python 3.8 or higher."
    exit 1
fi

PYTHON_VERSION=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
if (( $(echo "$PYTHON_VERSION < 3.8" | bc -l) )); then
    echo "‚ùå Python 3.8 or higher is required. Found version $PYTHON_VERSION"
    exit 1
fi
echo "‚úÖ Found Python $PYTHON_VERSION"

# Create virtual environment if it doesn't exist
if [ ! -d "venv" ]; then
    echo "üì¶ Creating virtual environment..."
    python3 -m venv venv || {
        echo "‚ùå Failed to create virtual environment"
        exit 1
    }
else
    echo "‚úÖ Virtual environment exists"
fi

# Activate virtual environment
echo "üîå Activating virtual environment..."
source venv/bin/activate || {
    echo "‚ùå Failed to activate virtual environment"
    exit 1
}

# Install dependencies
echo "üì• Installing dependencies..."
pip install --upgrade pip
pip install -r requirements.txt || {
    echo "‚ùå Failed to install dependencies"
    exit 1
}

# Database configuration
echo "üóÑÔ∏è Database configuration..."

# Create .env file if it doesn't exist
if [ ! -f ".env" ]; then
    echo "Please enter PostgreSQL database credentials:"
    read -p "Database host (default: localhost): " db_host
    db_host=${db_host:-localhost}
    
    read -p "Database port (default: 5432): " db_port
    db_port=${db_port:-5432}
    
    read -p "Database name (default: netureon): " db_name
    db_name=${db_name:-netureon}
    
    read -p "Database user (default: postgres): " db_user
    db_user=${db_user:-postgres}
    
    read -s -p "Database password: " db_password
    echo

    # Write database configuration to .env
    cat > .env << EOL
DB_HOST=$db_host
DB_PORT=$db_port
DB_NAME=$db_name
DB_USER=$db_user
DB_PASS=$db_password
EOL
    echo "‚úÖ Database configuration saved"
fi

# Import database schema
echo "üîÑ Importing database schema..."
source .env
PGPASSWORD=$DB_PASS psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -f schema.sql || {
    echo "‚ùå Failed to import database schema"
    exit 1
}

# Setup systemd services
echo "‚öôÔ∏è Setting up systemd services..."

# Create service files
echo "Creating service files..."

sudo tee /etc/systemd/system/netureon.service > /dev/null << EOL
[Unit]
Description=Netureon Network Monitor
After=network.target postgresql.service

[Service]
Type=simple
User=\$USER
WorkingDirectory=\$PWD
Environment=PYTHONPATH=\$PWD
ExecStart=\$PWD/venv/bin/python main.py
Restart=always
RestartSec=1

[Install]
WantedBy=multi-user.target
EOL

sudo tee /etc/systemd/system/netureon-alerts.service > /dev/null << EOL
[Unit]
Description=Netureon Alert Daemon
After=netureon.service
Requires=netureon.service

[Service]
Type=simple
User=\$USER
WorkingDirectory=\$PWD
Environment=PYTHONPATH=\$PWD
ExecStart=\$PWD/venv/bin/python alert_daemon.py
Restart=always
RestartSec=1

[Install]
WantedBy=multi-user.target
EOL

# Create timer service for network scanning
sudo tee /etc/systemd/system/netureon_scan.service > /dev/null << EOL
[Unit]
Description=Netureon Network Scanner Service
After=network.target postgresql.service
Wants=netureon_scan.timer

[Service]
Type=oneshot
User=\$USER
WorkingDirectory=\$PWD
Environment=PYTHONPATH=\$PWD
ExecStart=\$PWD/venv/bin/python net_scan.py
RemainAfterExit=no
# Set resource limits to prevent runaway scans
CPUQuota=50%
MemoryMax=512M
# Add timeout to prevent stuck scans
TimeoutSec=300
# Basic error handling
Restart=on-failure
RestartSec=30s

[Install]
WantedBy=multi-user.target
EOL

sudo tee /etc/systemd/system/netureon_scan.timer > /dev/null << EOL
[Unit]
Description=Netureon Network Scanner Timer
Documentation=https://github.com/extremealexv/Netureon

[Timer]
# Wait 60s after boot before first scan
OnBootSec=60
# Default interval is 15 minutes
OnUnitActiveSec=900s
# Randomize start time within 60s to prevent resource spikes
RandomizedDelaySec=60
# Ensure timer is persistent across reboots
Persistent=true

[Install]
WantedBy=timers.target
EOL

sudo tee /etc/systemd/system/netureon_web.service > /dev/null << EOL
[Unit]
Description=Netureon Web Interface
After=network.target postgresql.service

[Service]
Type=simple
User=\$USER
WorkingDirectory=\$PWD
Environment=PYTHONPATH=\$PWD
ExecStart=\$PWD/venv/bin/python webui/app.py
Restart=always
RestartSec=1

[Install]
WantedBy=multi-user.target
EOL

# Set permissions and enable services
sudo chmod 644 /etc/systemd/system/netureon.service
sudo chmod 644 /etc/systemd/system/netureon-alerts.service
sudo chmod 644 /etc/systemd/system/netureon_scan.service
sudo chmod 644 /etc/systemd/system/netureon_scan.timer
sudo chmod 644 /etc/systemd/system/netureon_web.service

# Enable services
sudo systemctl enable netureon.service
sudo systemctl enable netureon-alerts.service
sudo systemctl enable netureon_scan.timer
sudo systemctl enable netureon_web.service

# Reload systemd to recognize new services
sudo systemctl daemon-reload

# Test configuration
echo "‚úÖ Services configured successfully"
echo "üîÑ Testing email configuration..."

# Send test email
if [ -f ".env" ]; then
    python3 -c '
import smtplib
from email.message import EmailMessage
from os import environ
from dotenv import load_dotenv

load_dotenv()

msg = EmailMessage()
msg.set_content("This is a test email from Netureon setup.")
msg["Subject"] = "Netureon Setup Test"
msg["From"] = environ.get("EMAIL_FROM", "netureon@localhost")
msg["To"] = environ.get("EMAIL_TO", "admin@localhost")

smtp_host = environ.get("SMTP_HOST", "localhost")
smtp_port = int(environ.get("SMTP_PORT", "25"))

try:
    with smtplib.SMTP(smtp_host, smtp_port) as smtp:
        smtp.send_message(msg)
    print("‚úÖ Test email sent successfully")
except Exception as e:
    print(f"‚ùå Failed to send test email: {e}")
'
fi

echo "üéâ Setup complete! Services are ready to start."
echo "Use 'sudo systemctl start netureon_scan.timer' to start the network scanner"
echo "Use 'sudo systemctl start netureon_web' to start the web interface"
echo "Use 'sudo systemctl start netureon-alerts' to start the alert daemon"
